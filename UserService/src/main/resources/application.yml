server:
  port: 6060


spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: root
    url: jdbc:mysql://${MYSQL_HOST:localhost}:3306/microservices
    password: ANand@123
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
#  application:
#    name: USER-SERVICE
  config:
    import: configserver:http://localhost:6064

  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: https://dev-53114392.okta.com/oauth2/default
      client:
        registration:
          my-internal-client:
            provider: okta
            authorizationGrantType: client_credentials
            scope: internal
            client-id: 0oad4mwiw3oVE3y7N5d7
            client-secret: TK-J6_Y8T8n1zAKSP4Os7vE1k_rTNqhsxtzJKbgttP1ueepfEgXBmpqsxWPYV12k

        provider:
          okta:
            issuerUri: https://dev-53114392.okta.com/oauth2/default


#eureka:
#  client:
#    service-url:
#      defaultZone: http://localhost:8761/eureka
#    fetch-registry: true
#    register-with-eureka: true
#  instance:
#    prefer-ip-address: true


management:
  health:
    circuitbreakers:
      enabled: true
  endpoints:
    web:
      exposure:
        include: health


  endpoint:
    health:
      show-details: always


resilience4j:
  circuitbreaker:
    instances:
      ratingHotelBreaker:
        registerHealthIndicator: true
        eventConsumerBufferSize: 10
        failureRateThreshold: 50
        minimumNumberOfCalls: 5
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 6s
        permittedNumberOfCallsInHalfOpenState: 3
        slidingWindowSize: 10
        slidingWindowType: COUNT_BASED

  retry:
    instances:
      ratingHotelService:
        maxAttempts: 3
        waitDuration: 5s

  ratelimiter:
    instances:
      userRateLimiter:
        limitRefreshPeriod: 4s
        limitForPeriod: 2
        timeoutDuration: 0s

okta:
  oauth2:
    issuer: https://dev-53114392.okta.com/oauth2/default
    audience: api://default